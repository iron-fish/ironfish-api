generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id             Int      @id @default(autoincrement())
  public_address String   @unique @db.VarChar
  created_at     DateTime @default(now()) @db.Timestamp(6)
  updated_at     DateTime @default(now()) @db.Timestamp(6)
  total_points   Int      @default(0)
  email          String?  @db.VarChar
  events         Event[]

  @@index([public_address], name: "index_accounts_on_public_address")
  @@index([total_points], name: "index_accounts_on_total_points")
  @@map("accounts")
}

model Event {
  id          Int       @id @default(autoincrement())
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  account_id  Int
  type        EventType
  occurred_at DateTime  @db.Timestamp(6)
  points      Int
  account     Account   @relation(fields: [account_id], references: [id])

  @@index([account_id], name: "index_events_on_account_id")
  @@map("events")
}

model User {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @updatedAt @db.Timestamp(6)
  email      String   @db.VarChar
  graffiti   String   @db.VarChar

  @@index([email], name: "index_users_on_email")
  @@map("users")
}

enum EventType {
  BLOCK_MINED
  BUG_CAUGHT
  COMMUNITY_CONTRIBUTION
  NODE_HOSTED
  PULL_REQUEST_MERGED
  SOCIAL_MEDIA_PROMOTION

  @@map("event_type")
}
